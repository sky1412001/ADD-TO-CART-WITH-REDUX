{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport productData from '../productData';\nconst initialState = {\n  cart: [],\n  items: productData,\n  totalQuantity: 0,\n  totalPrice: 0\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      let find = state.cart.findIndex(item => item.id === action.payload.id);\n      if (find >= 0) {\n        state.cart[find].quantity += 1;\n      } else {\n        state.cart.push(action.payload);\n      }\n    },\n    getCartTotal: state => {\n      let {\n        totalQuantity,\n        totalPrice\n      } = state.cart.reduce((cartTotal, cartItem) => {\n        console.log(\"cartTotal\", cartTotal);\n        console.log(\"cartItem\", cartItem);\n        const {\n          price,\n          quantity\n        } = cartItem;\n        console.log(price, quantity);\n        const itemTotal = price * quantity;\n        cartTotal.totalPrice += itemTotal;\n        cartTotal.totalQuantity += quantity;\n        return cartTotal;\n      }, {\n        totalPrice: 0,\n        totalQuantity: 0\n      });\n      state.totalPrice = parseInt(totalPrice.toFixed(2));\n      state.totalQuantity = totalQuantity;\n    }\n  }\n});\nexport const {\n  addToCart,\n  getCartTotal\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","productData","initialState","cart","items","totalQuantity","totalPrice","cartSlice","name","reducers","addToCart","state","action","find","findIndex","item","id","payload","quantity","push","getCartTotal","reduce","cartTotal","cartItem","console","log","price","itemTotal","parseInt","toFixed","actions","reducer"],"sources":["/home/meander/GOAT/goat-app/src/features/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport productData from '../productData';\n\n\nconst initialState = {\n    cart : [],\n    items : productData,\n    totalQuantity : 0,\n    totalPrice: 0,\n};\n\nexport const cartSlice =createSlice({\n    name : \"cart\",\n    initialState,\n    reducers:{\n        addToCart : (state,action)=> {\n        let find = state.cart.findIndex((item)=>item.id === action.payload.id)    \n        if(find >= 0){\n            state.cart[find].quantity +=1;\n        }else{\n\n            state.cart.push(action.payload)\n        }\n        },\n\n      getCartTotal:(state) => {\n        let {totalQuantity,totalPrice} = state.cart.reduce(\n            (cartTotal,cartItem) => {\n                console.log(\"cartTotal\",cartTotal);\n                console.log(\"cartItem\",cartItem);\n                const {price, quantity} = cartItem;\n                console.log(price,quantity);\n                const itemTotal = price * quantity;\n                cartTotal.totalPrice += itemTotal;\n                cartTotal.totalQuantity += quantity;\n                return cartTotal\n            },\n            {\n                totalPrice: 0,\n                totalQuantity: 0,\n            }\n        );\n        state.totalPrice = parseInt(totalPrice.toFixed(2));\n        state.totalQuantity = totalQuantity;\n      }\n\n    },\n});\nexport const {addToCart , getCartTotal} = cartSlice.actions;\n\nexport  default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,WAAW,MAAM,gBAAgB;AAGxC,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAG,EAAE;EACTC,KAAK,EAAGH,WAAW;EACnBI,aAAa,EAAG,CAAC;EACjBC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAEP,WAAW,CAAC;EAChCQ,IAAI,EAAG,MAAM;EACbN,YAAY;EACZO,QAAQ,EAAC;IACLC,SAAS,EAAGA,CAACC,KAAK,EAACC,MAAM,KAAI;MAC7B,IAAIC,IAAI,GAAGF,KAAK,CAACR,IAAI,CAACW,SAAS,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACtE,IAAGH,IAAI,IAAI,CAAC,EAAC;QACTF,KAAK,CAACR,IAAI,CAACU,IAAI,CAAC,CAACK,QAAQ,IAAG,CAAC;MACjC,CAAC,MAAI;QAEDP,KAAK,CAACR,IAAI,CAACgB,IAAI,CAACP,MAAM,CAACK,OAAO,CAAC;MACnC;IACA,CAAC;IAEHG,YAAY,EAAET,KAAK,IAAK;MACtB,IAAI;QAACN,aAAa;QAACC;MAAU,CAAC,GAAGK,KAAK,CAACR,IAAI,CAACkB,MAAM,CAC9C,CAACC,SAAS,EAACC,QAAQ,KAAK;QACpBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACH,SAAS,CAAC;QAClCE,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;QAChC,MAAM;UAACG,KAAK;UAAER;QAAQ,CAAC,GAAGK,QAAQ;QAClCC,OAAO,CAACC,GAAG,CAACC,KAAK,EAACR,QAAQ,CAAC;QAC3B,MAAMS,SAAS,GAAGD,KAAK,GAAGR,QAAQ;QAClCI,SAAS,CAAChB,UAAU,IAAIqB,SAAS;QACjCL,SAAS,CAACjB,aAAa,IAAIa,QAAQ;QACnC,OAAOI,SAAS;MACpB,CAAC,EACD;QACIhB,UAAU,EAAE,CAAC;QACbD,aAAa,EAAE;MACnB,CACJ,CAAC;MACDM,KAAK,CAACL,UAAU,GAAGsB,QAAQ,CAACtB,UAAU,CAACuB,OAAO,CAAC,CAAC,CAAC,CAAC;MAClDlB,KAAK,CAACN,aAAa,GAAGA,aAAa;IACrC;EAEF;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACK,SAAS;EAAGU;AAAY,CAAC,GAAGb,SAAS,CAACuB,OAAO;AAE3D,eAAgBvB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}